version: '3'

services:
  db:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${API_PORT}:${API_PORT}"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - API_PORT=${API_PORT}
    volumes:
      # Mount a docs folder if you have pre-existing docs or want to add them manually
      - ./docs:/app/docs

  code-monitor:
    build:
      context: ./code-monitor
      dockerfile: Dockerfile
    depends_on:
      - api
    environment:
      - REPO_PATH=${REPO_PATH}
      - API_URL=${API_URL}
      - CHECK_INTERVAL=${CHECK_INTERVAL}
      - WEBHOOK_ENABLED=${WEBHOOK_ENABLED:-false}
      - WEBHOOK_URL=${WEBHOOK_URL}
      - LLM_API_URL=${LLM_API_URL}
      - LLM_API_KEY=${LLM_API_KEY}
    volumes:
      # Mount your actual repository here
      - ./repo:/app/repo
      # Mount configuration files
      - ./code-monitor/config:/app/config

volumes:
  postgres_data: